// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Logging = require("./Logging.res.js");
var Internal = require("./Internal.res.js");

function make(exn, loggerOpt, msg) {
  var logger = loggerOpt !== undefined ? loggerOpt : Logging.getLogger();
  return {
          logger: logger,
          exn: exn,
          msg: msg
        };
}

function log(self) {
  var msg = self.msg;
  var exn = self.exn;
  var logger = self.logger;
  if (msg !== undefined) {
    return Logging.childErrorWithExn(logger, Internal.prettifyExn(exn), msg);
  } else {
    return Logging.childError(logger, Internal.prettifyExn(exn));
  }
}

function raiseExn(self) {
  throw Internal.prettifyExn(self.exn);
}

function mkLogAndRaise(logger, msg, exn) {
  var exn$1 = Internal.prettifyExn(exn);
  log(make(exn$1, logger, msg));
  throw exn$1;
}

function unwrapLogAndRaise(logger, msg, result) {
  if (result.TAG === "Ok") {
    return result._0;
  } else {
    return mkLogAndRaise(logger, msg, result._0);
  }
}

function logAndRaise(self) {
  log(self);
  throw Internal.prettifyExn(self.exn);
}

exports.make = make;
exports.log = log;
exports.raiseExn = raiseExn;
exports.mkLogAndRaise = mkLogAndRaise;
exports.unwrapLogAndRaise = unwrapLogAndRaise;
exports.logAndRaise = logAndRaise;
/* Logging Not a pure module */
